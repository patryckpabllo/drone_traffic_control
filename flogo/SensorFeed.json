{
    "imports": [
        "github.com/project-flogo/flow",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
        "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
        "github.com/project-flogo/contrib/activity/actreturn",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/trigger/rest",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/boolean",
        "git.tibco.com/git/product/ipaas/wi-contrib.git/function/utility",
        "github.com/project-flogo/contrib/function/string"
    ],
    "name": "SensorFeed",
    "description": " ",
    "version": "1.1.0",
    "type": "flogo:app",
    "appModel": "1.1.1",
    "feVersion": "2.8.1",
    "triggers": [
        {
            "ref": "#rest",
            "name": "tibco-wi-rest",
            "description": "Simple REST Trigger",
            "settings": {
                "port": "=$property[\"port\"]",
                "APISpecUpdate": false,
                "swagger": "",
                "secureConnection": false,
                "serverKey": "",
                "caCertificate": ""
            },
            "id": "ReceiveHTTPMessage",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "Method": "POST",
                        "Path": "/callback/sensor",
                        "OutputValidation": false
                    },
                    "action": {
                        "ref": "github.com/project-flogo/flow",
                        "settings": {
                            "flowURI": "res://flow:SigmeterStream"
                        },
                        "input": {
                            "body": {
                                "mapping": {
                                    "device": "=$.body.device",
                                    "date": "=$.body.date",
                                    "frame": "=$.body.frame",
                                    "temperature": "=$.body.temperature",
                                    "humidity": "=$.body.humidity",
                                    "temperature2": "=$.body.temperature2",
                                    "battery": "=$.body.battery",
                                    "timeOn": "=$.body.timeOn",
                                    "count1": "=$.body.machineOn",
                                    "count2": "=$.body.count2",
                                    "lng": "=$.body.lng"
                                }
                            }
                        },
                        "output": {
                            "data": {
                                "mapping": {
                                    "device": "=$.data.device",
                                    "temperature": "=$.data.humidity",
                                    "temperature1": "=$.data.humidity",
                                    "temperature2": "=$.data.temperature2",
                                    "battery": "=$.data.battery",
                                    "timeOn": "=$.data.timeOn",
                                    "machineOn": "=$.data.machineOn",
                                    "count2": "=$.data.count2",
                                    "lat": "=$.data.lat",
                                    "lng": "=$.data.lng",
                                    "date": "=$.data.date",
                                    "frame": "=$.data.frame",
                                    "count1": "=$.data.count1"
                                }
                            }
                        }
                    },
                    "reply": {
                        "code": 200,
                        "configureResponseCodes": false,
                        "message": {}
                    },
                    "schemas": {
                        "reply": {
                            "data": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"device\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"frame\":{\"type\":\"number\"},\"temperature\":{\"type\":\"number\"},\"humidity\":{\"type\":\"number\"},\"temperature1\":{\"type\":\"number\"},\"temperature2\":{\"type\":\"number\"},\"battery\":{\"type\":\"number\"},\"timeOn\":{\"type\":\"number\"},\"machineOn\":{\"type\":\"number\"},\"count1\":{\"type\":\"number\"},\"count2\":{\"type\":\"number\"},\"lat\":{\"type\":\"number\"},\"lng\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n\"device\": \"MTRAAA999\",\n\"date\": \"2018-01-01T14:30:00.000Z\",\n\"frame\": 0,\n\"temperature\": 31.5,\n\"humidity\": 52,\n\"temperature1\": 19.5,\n\"temperature2\": -4.5,\n\"battery\": 3.6,\n\"timeOn\": 132,\n\"machineOn\": 51,\n\"count1\": 39283,\n\"count2\": 3212,\n\"lat\": -20.000000,\n\"lng\": -40.000000\n}"
                            }
                        },
                        "output": {
                            "headers": {
                                "type": "json",
                                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                            },
                            "body": {
                                "type": "json",
                                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"device\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"frame\":{\"type\":\"number\"},\"temperature\":{\"type\":\"number\"},\"humidity\":{\"type\":\"number\"},\"temperature1\":{\"type\":\"number\"},\"temperature2\":{\"type\":\"number\"},\"battery\":{\"type\":\"number\"},\"timeOn\":{\"type\":\"number\"},\"machineOn\":{\"type\":\"number\"},\"count1\":{\"type\":\"number\"},\"count2\":{\"type\":\"number\"},\"lat\":{\"type\":\"number\"},\"lng\":{\"type\":\"number\"}}}",
                                "fe_metadata": "{\n\"device\": \"MTRAAA999\",\n\"date\": \"2018-01-01T14:30:00.000Z\",\n\"frame\": 0,\n\"temperature\": 31.5,\n\"humidity\": 52,\n\"temperature1\": 19.5,\n\"temperature2\": -4.5,\n\"battery\": 3.6,\n\"timeOn\": 132,\n\"machineOn\": 51,\n\"count1\": 39283,\n\"count2\": 3212,\n\"lat\": -20.000000,\n\"lng\": -40.000000\n}"
                            }
                        }
                    }
                }
            ]
        }
    ],
    "resources": [
        {
            "id": "flow:SigmeterStream",
            "data": {
                "name": "SigmeterStream",
                "description": "",
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessage",
                        "to": "MQTTPub",
                        "type": "expression",
                        "label": "LogMessagetoMQTTPub",
                        "value": "string.equalsIgnoreCase($flow.body.device, $property[\"sensorFilter\"])"
                    },
                    {
                        "id": 2,
                        "from": "MQTTPub",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 3,
                        "from": "LogMessage",
                        "to": "Return1",
                        "type": "exprOtherwise",
                        "label": "LogMessagetoReturn1"
                    }
                ],
                "tasks": [
                    {
                        "id": "LogMessage",
                        "name": "LogMessage",
                        "description": "Simple Log Message Activity",
                        "activity": {
                            "ref": "#log",
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": "=string.concat(\"Sensor data received:\",utility.renderJSON($flow.body, boolean.false()))"
                            }
                        }
                    },
                    {
                        "id": "MQTTPub",
                        "name": "MQTTPub",
                        "description": "An MQTT message publisher",
                        "activity": {
                            "ref": "#publish",
                            "input": {
                                "Connection": {
                                    "id": "73031330-ada2-11ea-814f-39f6184b81d1",
                                    "type": "flogo:connector",
                                    "version": "1.1.0",
                                    "name": "connection",
                                    "hashTags": [],
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "streamhub"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "broker",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Broker URL",
                                                "visible": true,
                                                "appPropertySupport": true,
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                                            },
                                            "value": "=$property[\"Mqtt.streamhub.Broker_URL\"]"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Username",
                                                "visible": true,
                                                "Description": "Enter a username if this connection requires one",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Mqtt.streamhub.Username\"]"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "visible": true,
                                                "type": "password",
                                                "encryptable": true,
                                                "Description": "Enter a password if this connection requires one",
                                                "appPropertySupport": true
                                            },
                                            "value": "=$property[\"Mqtt.streamhub.Password\"]"
                                        },
                                        {
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Encryption Mode",
                                                "description": "Choose the type of authentication to use",
                                                "appPropertySupport": true
                                            },
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "value": "=$property[\"Mqtt.streamhub.Encryption_Mode\"]"
                                        },
                                        {
                                            "name": "cacert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Cacert",
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientcert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Cert",
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientkey",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Key",
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "appPropertySupport": true,
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "description": "MQTT Connector",
                                        "category": "Mqtt",
                                        "smallIcon": "icons/mqtt.png",
                                        "largeIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "loopType": "none",
                                    "loopSettings": [],
                                    "retrySettings": [],
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "iteratorAccumulate": false,
                                    "isValid": true,
                                    "lastUpdatedTime": 1608038464731,
                                    "user": "flogo",
                                    "connectorName": "streamhub",
                                    "connectorDescription": " "
                                },
                                "topic": "drone/sigmeter",
                                "retain": false,
                                "qos": 0,
                                "valueType": "JSON",
                                "stringValue": "",
                                "jsonValue": {
                                    "mapping": {
                                        "device": "=$flow.body.device",
                                        "date": "=$flow.body.date",
                                        "frame": "=$flow.body.frame",
                                        "temperature": "=$flow.body.temperature",
                                        "temperature1": "=$flow.body.temperature1",
                                        "temperature2": "=$flow.body.temperature2",
                                        "timeOn": "=$flow.body.timeOn",
                                        "machineOn": "=$flow.body.machineOn",
                                        "count1": "=$flow.body.count1",
                                        "count2": "=$flow.body.count2",
                                        "lat": "=$flow.body.lat",
                                        "lng": "=$flow.body.lng",
                                        "humidity": "=$flow.body.humidity",
                                        "battery": "=$flow.body.battery",
                                        "drone_id": "=$property[\"droneId\"]"
                                    }
                                }
                            },
                            "schemas": {
                                "input": {
                                    "jsonValue": {
                                        "type": "json",
                                        "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"drone_id\":{\"type\":\"string\"},\"device\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"frame\":{\"type\":\"number\"},\"temperature\":{\"type\":\"number\"},\"humidity\":{\"type\":\"number\"},\"temperature1\":{\"type\":\"number\"},\"temperature2\":{\"type\":\"number\"},\"battery\":{\"type\":\"number\"},\"timeOn\":{\"type\":\"number\"},\"machineOn\":{\"type\":\"number\"},\"count1\":{\"type\":\"number\"},\"count2\":{\"type\":\"number\"},\"lat\":{\"type\":\"number\"},\"lng\":{\"type\":\"number\"}}}",
                                        "fe_metadata": "{\n\"drone_id\" : \"123\",\n\"device\": \"MTRAAA999\",\n\"date\": \"2018-01-01T14:30:00.000Z\",\n\"frame\": 0,\n\"temperature\": 31.5,\n\"humidity\": 52,\n\"temperature1\": 19.5,\n\"temperature2\": -4.5,\n\"battery\": 3.6,\n\"timeOn\": 132,\n\"machineOn\": 51,\n\"count1\": 39283,\n\"count2\": 3212,\n\"lat\": -20.000000,\n\"lng\": -40.000000\n}"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": "=$flow.body"
                                }
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "description": "Simple Return Activity",
                        "activity": {
                            "ref": "#actreturn",
                            "settings": {
                                "mappings": {
                                    "data": {
                                        "mapping": {
                                            "device": "=$flow.body.device",
                                            "date": "=$flow.body.date",
                                            "frame": "=$flow.body.frame",
                                            "humidity": "=$flow.body.temperature",
                                            "temperature1": "=$flow.body.humidity",
                                            "temperature2": "=$flow.body.temperature2",
                                            "machineOn": "=$flow.body.machineOn",
                                            "count2": "=$flow.body.count2",
                                            "lat": "=$flow.body.lat",
                                            "lng": "=$flow.body.lng"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "headers",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"device\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"frame\":{\"type\":\"number\"},\"temperature\":{\"type\":\"number\"},\"humidity\":{\"type\":\"number\"},\"temperature1\":{\"type\":\"number\"},\"temperature2\":{\"type\":\"number\"},\"battery\":{\"type\":\"number\"},\"timeOn\":{\"type\":\"number\"},\"machineOn\":{\"type\":\"number\"},\"count1\":{\"type\":\"number\"},\"count2\":{\"type\":\"number\"},\"lat\":{\"type\":\"number\"},\"lng\":{\"type\":\"number\"}}"
                            }
                        }
                    ],
                    "output": [
                        {
                            "name": "code",
                            "type": "integer"
                        },
                        {
                            "name": "data",
                            "type": "object",
                            "schema": {
                                "type": "json",
                                "value": "{\"device\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"frame\":{\"type\":\"number\"},\"temperature\":{\"type\":\"number\"},\"humidity\":{\"type\":\"number\"},\"temperature1\":{\"type\":\"number\"},\"temperature2\":{\"type\":\"number\"},\"battery\":{\"type\":\"number\"},\"timeOn\":{\"type\":\"number\"},\"machineOn\":{\"type\":\"number\"},\"count1\":{\"type\":\"number\"},\"count2\":{\"type\":\"number\"},\"lat\":{\"type\":\"number\"},\"lng\":{\"type\":\"number\"}}"
                            }
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"body\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"device\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"frame\":{\"type\":\"number\"},\"temperature\":{\"type\":\"number\"},\"humidity\":{\"type\":\"number\"},\"temperature1\":{\"type\":\"number\"},\"temperature2\":{\"type\":\"number\"},\"battery\":{\"type\":\"number\"},\"timeOn\":{\"type\":\"number\"},\"machineOn\":{\"type\":\"number\"},\"count1\":{\"type\":\"number\"},\"count2\":{\"type\":\"number\"},\"lat\":{\"type\":\"number\"},\"lng\":{\"type\":\"number\"}}}}}",
                        "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"device\":{\"type\":\"string\"},\"date\":{\"type\":\"string\"},\"frame\":{\"type\":\"number\"},\"temperature\":{\"type\":\"number\"},\"humidity\":{\"type\":\"number\"},\"temperature1\":{\"type\":\"number\"},\"temperature2\":{\"type\":\"number\"},\"battery\":{\"type\":\"number\"},\"timeOn\":{\"type\":\"number\"},\"machineOn\":{\"type\":\"number\"},\"count1\":{\"type\":\"number\"},\"count2\":{\"type\":\"number\"},\"lat\":{\"type\":\"number\"},\"lng\":{\"type\":\"number\"}}}},\"required\":[]}"
                    }
                },
                "explicitReply": true
            }
        }
    ],
    "properties": [
        {
            "name": "Mqtt.streamhub.Broker_URL",
            "type": "string",
            "value": "52.67.94.207:1883"
        },
        {
            "name": "Mqtt.streamhub.Username",
            "type": "string",
            "value": ""
        },
        {
            "name": "Mqtt.streamhub.Password",
            "type": "string",
            "value": "SECRET:jRBNVDwT9BYMf4DEWCXVKA=="
        },
        {
            "name": "Mqtt.streamhub.Encryption_Mode",
            "type": "string",
            "value": "None"
        },
        {
            "name": "droneId",
            "type": "string",
            "value": "123"
        },
        {
            "name": "sensorFilter",
            "type": "string",
            "value": "MTR1F25683"
        },
        {
            "name": "port",
            "type": "float64",
            "value": 80
        }
    ],
    "connections": {},
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1tcXR0LmdpdC9NcXR0IiwiczNsb2NhdGlvbiI6IlRpYmNvL01xdHQifV0=",
    "fe_metadata": "UEsDBAoAAAAIAM94klGrqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACADPeJJRq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}